// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Album {
  id          String           @id @default(uuid())
  name        String
  year        Int
  artistId    String?
  artist      Artist?          @relation(fields: [artistId], references: [id])
  tracks      Track[]
  favoritedBy FavoriteAlbums[] @relation("FavoriteAlbumsRelation")
}

model Artist {
  id          String            @id @default(uuid())
  name        String
  grammy      Boolean
  albums      Album[]
  tracks      Track[]
  favoritedBy FavoriteArtists[] @relation("FavoriteArtistsRelation")
}

model Track {
  id          String           @id @default(uuid())
  name        String
  duration    Int
  artistId    String?
  albumId     String?
  artist      Artist?          @relation(fields: [artistId], references: [id])
  album       Album?           @relation(fields: [albumId], references: [id])
  favoritedBy FavoriteTracks[] @relation("FavoriteTracksRelation")
}

model FavoriteAlbums {
  id     String  @id @default("fixed-favorite-albums-id")
  albums Album[] @relation("FavoriteAlbumsRelation")
}

model FavoriteArtists {
  id      String   @id @default("fixed-favorite-artists-id")
  artists Artist[] @relation("FavoriteArtistsRelation")
}

model FavoriteTracks {
  id     String  @id @default("fixed-favorite-tracks-id")
  tracks Track[] @relation("FavoriteTracksRelation")
}
